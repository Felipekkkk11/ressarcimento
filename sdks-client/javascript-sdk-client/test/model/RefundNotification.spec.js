/*
 * Plataforma de Ressarcimento do Open Banking Brasil
 * APIs da plataforma de Ressarcimento do Open Banking Brasil para a comunicação online com a plaforma. Através da documentação das APIs abaixo é possível realizar os devidos testes de integração.
 *
 * OpenAPI spec version: beta-0.0.1
 * Contact: suporte-ressarcimento@openbankingbrasil.org.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.27
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PlataformaDeRessarcimentoDoOpenBankingBrasil);
  }
}(this, function(expect, PlataformaDeRessarcimentoDoOpenBankingBrasil) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('RefundNotification', function() {
      beforeEach(function() {
        instance = new PlataformaDeRessarcimentoDoOpenBankingBrasil.RefundNotification();
      });

      it('should create an instance of RefundNotification', function() {
        // TODO: update the code to test RefundNotification
        expect(instance).to.be.a(PlataformaDeRessarcimentoDoOpenBankingBrasil.RefundNotification);
      });

      it('should have the property timestamp (base name: "timestamp")', function() {
        // TODO: update the code to test the property timestamp
        expect(instance).to.have.property('timestamp');
        // expect(instance.timestamp).to.be(expectedValueLiteral);
      });

      it('should have the property sessionToken (base name: "sessionToken")', function() {
        // TODO: update the code to test the property sessionToken
        expect(instance).to.have.property('sessionToken');
        // expect(instance.sessionToken).to.be(expectedValueLiteral);
      });

      it('should have the property clientId (base name: "clientId")', function() {
        // TODO: update the code to test the property clientId
        expect(instance).to.have.property('clientId');
        // expect(instance.clientId).to.be(expectedValueLiteral);
      });

      it('should have the property receiverId (base name: "receiverId")', function() {
        // TODO: update the code to test the property receiverId
        expect(instance).to.have.property('receiverId');
        // expect(instance.receiverId).to.be(expectedValueLiteral);
      });

      it('should have the property transmitterId (base name: "transmitterId")', function() {
        // TODO: update the code to test the property transmitterId
        expect(instance).to.have.property('transmitterId');
        // expect(instance.transmitterId).to.be(expectedValueLiteral);
      });

      it('should have the property uri (base name: "uri")', function() {
        // TODO: update the code to test the property uri
        expect(instance).to.have.property('uri');
        // expect(instance.uri).to.be(expectedValueLiteral);
      });

      it('should have the property statusCode (base name: "statusCode")', function() {
        // TODO: update the code to test the property statusCode
        expect(instance).to.have.property('statusCode');
        // expect(instance.statusCode).to.be(expectedValueLiteral);
      });

      it('should have the property payloadSize (base name: "payloadSize")', function() {
        // TODO: update the code to test the property payloadSize
        expect(instance).to.have.property('payloadSize');
        // expect(instance.payloadSize).to.be(expectedValueLiteral);
      });

      it('should have the property processTimespan (base name: "processTimespan")', function() {
        // TODO: update the code to test the property processTimespan
        expect(instance).to.have.property('processTimespan');
        // expect(instance.processTimespan).to.be(expectedValueLiteral);
      });

    });
  });

}));
