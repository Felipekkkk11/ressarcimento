/*
 * Plataforma de Ressarcimento do Open Banking Brasil
 * APIs da plataforma de Ressarcimento do Open Banking Brasil para a comunicação online com a plaforma. Através da documentação das APIs abaixo é possível realizar os devidos testes de integração.
 *
 * OpenAPI spec version: beta-0.0.1
 * Contact: suporte-ressarcimento@openbankingbrasil.org.br
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.RefundNotification;
import io.swagger.client.model.RefundProcess;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RefundApiV1Api
 */
@Ignore
public class RefundApiV1ApiTest {

    private final RefundApiV1Api api = new RefundApiV1Api();

    /**
     * Operação de consulta de processos de transações
     *
     * Método da API de Consulta de processos de transações de APIs do Open Banking Brasil. O sistema utilizará essas informações para consultar processos que podem ter uma ou mais transações dentro da plataformas dos participantes. &lt;br&gt; Para a utilização deste método é necessário gerar um Token de Acesso na plataforma central do Diretório do Open Banking Brasil.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void findNotificationByIdTest() throws ApiException {
        String processId = null;
        RefundProcess response = api.findNotificationById(processId);

        // TODO: test validations
    }
    /**
     * Operação de consulta de monitoramento de processos de transações
     *
     * Método da API de Consulta de Monitoramento de processos de transações para verificar o status das APIs do Open Banking Brasil.O sistema utilizará essas informações para monitorar os processos e transações dentro das plataformas dos participantes. &lt;br&gt; Para a utilização deste método é necessário gerar um Token de Acesso na plataforma central do Diretório do Open Banking Brasil.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void healthcheckTest() throws ApiException {
        RefundProcess response = api.healthcheck();

        // TODO: test validations
    }
    /**
     * Operação de registro unitário de transação 
     *
     * Método da API de Reporte unitário de consumo de APIs do Open Banking Brasil. O sistema utilizará essas informações para conciliar e contabilizar os custos das plataformas dos participantes. &lt;br&gt; Para a utilização deste método é necessário gerar um Token de Acesso na plataforma central do Diretório do Open Banking Brasil.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationTest() throws ApiException {
        RefundNotification body = null;
        RefundProcess response = api.notification(body);

        // TODO: test validations
    }
    /**
     * Operação de registro em massa de uma transação
     *
     * Método da API de Reporte de atualização em massa de APIs do Open Banking Brasil. O sistema utilizará essas informações para conciliar e contabilizar os custos das plataformas dos participantes. &lt;br&gt; Para a utilização deste método é necessário gerar um Token de Acesso na plataforma central do Diretório do Open Banking Brasil.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void notificationsTest() throws ApiException {
        List<RefundNotification> body = null;
        RefundProcess response = api.notifications(body);

        // TODO: test validations
    }
}
